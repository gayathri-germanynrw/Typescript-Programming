Playwright Day09:

Topics:
	TypeScript Programming:
		Variables
		functions
		class & objects
		import & export
		encapsulation
		asbtraction
		polymorphism



	Playwright with TypeScript
	Playwright BDD Framework with TypeScript



JavaScript vs TypeScript:
	
	JavaScript: 
		1. Dynamically Typed, allows variables to change types at runtime.

		2. Interpreted language that runs without prior compilation.

		3. Errors are typically caught at runtime.

		4. Less maintainable in large projects (no Type Safety).

		5. Does not support all OOP prinnciples ===> Prototype language


	TypeScript:
		1. Statically Typed, enabls type checking at compile time, which helps catch errors early.

		2. Compiled language that needs to be compiled into JavaScript before execution.

		3. Errors are caught at compile time (reduces runtime errors and improves code reliability).

		4. Improves maintainability and readability, especially in large codebases (Type Safety).

		5. Supports all OOP prinnciples.



-------------------------

Steps to build SEP Automation framework:

	1. Create the folder (sep-automation)

	2. Install depenndencies

	3. Configure the cucumber (cucumber.js)

	4. Create the features

	5. Create pages:
		5.1 BasePage: configure page instance to all locator objects
		5.2 create other Page classes

	6. create the globalPagesSetup:
		global page object decleration and initializing them with the same page instance

	7. create hooks folder:
		configure the globalHooks and configuration constants
		CustomWorld==> customize the test world for each scenario

	8. Create steps folder:
		for stroring step definitions

	9. create the scripts in package.json

	10. Create utilities:
		 BrowserUtilities